{"version":3,"sources":["serviceWorker.js","App.js","pages/home/index.js","pages/recommend/index.js","pages/account/login/index.js","pages/account/register/index.js","pages/account/index.js","resource/menuConfig.js","components/Header/index.js","utils/utils.js","admin.js","components/Footer/index.js","pages/nomatch/index.js","pages/rankingList/newList.js","pages/rankingList/soarList.js","pages/rankingList/hotList.js","pages/singertList/index.js","pages/cd/index.js","pages/shop/index.js","pages/problem/index.js","utils/router.js","index.js"],"names":["Boolean","window","location","hostname","match","App","this","props","children","Component","Home","className","React","Recommend","Login","Register","Account","menuList","title","key","SubMenu","Option","Header","ItemGroup","state","renderMenu","data","map","item","Item","to","menuTreeNode","MenuConfig","setState","mode","theme","style","marginLeft","Admin","NewList","Modals","Loadings","SingeList","Cd","Shop","Problem","IRouter","path","render","exact","component","SoarList","HotList","SingerList","Nomatch","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f5d4c6a4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React,{ Component} from 'react';\nimport './App.css';\n\nclass App extends Component{\n  render(){\n    return (\n      <div>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","import React from 'react'\nimport \"../home/index.less\"\n\nexport default class Home extends React.Component{\n    render(){\n        return(\n            <div className=\"home-wrap\">\n                欢迎界面\n            </div>\n        )\n    }\n}","import React from 'react'\nimport \"../recommend/index.less\"\n\nexport default class Recommend extends React.Component{\n    render(){\n        return(\n            <div className=\"home-wrap\">\n                推荐界面\n            </div>\n        )\n    }\n}","import React from 'react'\n\nexport  default class Login extends React.Component{\n    render(){\n        return(\n            <div>\n                this is Login page\n            </div>\n        )\n    }\n\n}\n","import React from 'react'\n\nexport  default class Register extends React.Component{\n    render(){\n        return(\n            <div>\n                this is Register page\n            </div>\n        )\n    }\n\n}\n","import React from 'react'\n\nexport  default class Account extends React.Component{\n    render(){\n        return(\n            <div>\n                this is Account page<br></br>\n                this is Account page\n                this is Account page\n                this is Account page\n                this is Account page this is Account page\n\n            </div>\n        )\n    }\n\n}\n","const menuList = [\n    {\n        title:'推荐',\n        key:'/admin/recommend'\n    },\n    // {\n    //     title:'排行榜',\n    //     key:'/admin/rankingList',\n    //     children:[\n            {\n                title:'新歌榜',\n                key:'/admin/rankingList/newList',\n            },\n            {\n                title:'飙升榜',\n                key:'/admin/rankingList/soarList',\n            },\n            {\n                title:'热歌榜',\n                key:'/admin/rankingList/hotList',\n            },\n    //     ]\n    // },\n    {\n        title:'歌手榜',\n        key:'/admin/singerList'\n    },\n    {\n        title:'新碟上架',\n        key:'/admin/cd'\n    },\n    {\n        title:'商场',\n        key:'/admin/shop'\n    },\n\n\n    {\n        title:'常见问题',\n        key:'/admin/problem'\n    },\n];\nexport default menuList;","import React from 'react'\nimport { Row, Col,Menu} from 'antd';\nimport {NavLink} from 'react-router-dom'\nimport MenuConfig from './../../resource/menuConfig'\nimport \"./index.less\"\nimport Util from '../../utils/utils'\nimport axios from '../../axios/index.js'\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGrop = Menu.ItemGroup;\n\nexport default class Header extends React.Component{\n    state={\n\n    }\n    componentWillMount(){\n        const menuTreeNode = this.renderMenu(MenuConfig);\n        this.setState({\n            menuTreeNode\n        })\n    }\n    //菜单渲染\n    renderMenu =(data) =>{\n        // 相当于一个数组\n        return data.map((item) => {\n            if(item.children){\n        //         //递归遍历是否有子节点\n        //         // this.renderMenu(item.children);\n                return (\n            <SubMenu title={item.title} key={item.key}>\n                     {this.renderMenu(item.children)}\n                 </SubMenu>\n                )\n            }\n            return <Menu.Item title={item.title} key={item.key}>\n            <NavLink to={item.key}>{item.title}</NavLink>\n            </Menu.Item>\n        })\n    }\n    render(){\n        return (\n            <div className=\"header\">\n                <div className=\"header_title\">\n                    <div className=\"header_logo\">\n                    </div>\n                    <Menu\n                        mode=\"horizontal\"\n                        theme=\"dark\">\n                        {this.state.menuTreeNode}\n                    </Menu>\n                </div>\n                <span className=\"header_login\">\n                    <NavLink to='/admin/login'>登陆</NavLink>\n                    <NavLink to='/admin/register' style={{marginLeft:'10px'}}>注册</NavLink></span>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Select } from 'antd'\nconst Option = Select.Option;\n\nexport default{\n    formateDate(time){\n        if(!time)\n            return '';\n        let date = new Date(time);\n        return date.getFullYear() +'-' + (date.getMonth()+1) +'-'+date.getDate() +' '+date.getHours() +':' +date.getMinutes() +':' +date.getSeconds();\n    },\n    pagination(data,callback){\n        return {\n            onChange:(current)=>{\n                callback(current)\n            },\n            current:data.result.page,\n            pageSize:data.result.page_size,\n            total: data.result.total_count,\n            showTotal:()=>{\n                return `共${data.result.total_count}条`\n            },\n            showQuickJumper:true\n        }\n    },\n}","import React from 'react'\nimport { Row, Col} from 'antd';\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport './style/common.less'\n\n\nexport default class Admin extends React.Component{\n    render(){\n        return (\n            <div>\n            <Header/>\n            <Row className=\"container\">\n                <div className=\"content\">\n                    {/* <Home/> */}\n                    {this.props.children}\n                </div>\n                {/* </Col> */}\n            </Row>\n            </div>\n        );\n    }\n}","import React from 'react'\nimport \"../Footer/index.less\"\n// import { Row, Col} from 'antd';\n\nexport default class Footer extends React.Component{\n    render(){\n        return (\n             <div className=\"footer\">\n                我们一起砍星星🔪\n            </div>\n            \n        );\n    }\n}","import React from 'react'\nimport \"../nomatch/index.less\"\n\nexport  default class Login extends React.Component{\n    render(){\n        return(\n            <div  className=\"picture\"></div>\n        )\n    }\n\n}\n","import React from 'react'\nimport {Card,Button,Radio} from 'antd'\n\nimport './index.less'\n\nexport  default class NewList extends React.Component{\n    render(){\n        return(\n            <div>\n            新歌榜\n            </div>\n        )\n    }\n\n}\n","import React from 'react'\nimport {Card,Button,Modal} from 'antd'\n\nimport './index.less'\n\nexport default class Modals extends React.Component{\n\n    state = {\n\n    }\n\n\n    render(){\n        return(\n            <div>\n                飙升榜\n            </div>\n        )\n    }\n}","import React from 'react'\nimport {Card} from 'antd'\nimport \"./index.less\"\n\nexport  default class Loadings extends React.Component{\n\n    render(){\n        return(\n           <div>\n               热歌榜\n           </div>\n        )\n    }\n}\n","import React from 'react'\nimport {Card,Form,Icon,Input,Checkbox, Button, message} from 'antd'\n\n\nclass SingeList extends React.Component{\n\n    render(){\n        return(\n          <div>\n             歌手榜\n          </div>\n        )\n    }\n}\n\nexport default SingeList;\n","import React from 'react';\nimport { Card, Button, Table, Form, Select, Modal, message } from 'antd';\n\nclass Cd extends React.Component{\n    render(){\n        return (\n            <div>Cd</div>\n        );\n    }\n}\nexport default Cd;","import React from 'react';\nimport { Card, Button, Table, Form, Select, Modal, DatePicker, message} from 'antd'\nimport axios from '../../axios'\nimport Utils from '../../utils/utils'\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\n\nclass Shop extends React.Component{\n\n    render(){\n        return (\n        <div>商场</div>\n        );\n    }\n}\nexport default Shop;\n","import React from 'react'\nimport {Card,Table,Spin,Icon,Alert, Button,notification, message, Modal} from 'antd'\nimport axios from '../../axios'\nimport { is } from '@babel/types';\n// import axios from 'axios'\nexport  default class Problem extends React.Component{\n\n    state={\n    }\n    render(){\n        return(\n           <div>\n               常见问题\n           </div>\n        )\n    }\n}\n","import React from 'react'\nimport {HashRouter , Router ,Switch,Route,Link} from 'react-router-dom'\nimport App from '../App'\nimport Home from '../pages/home'\nimport Recommend from '../pages/recommend'\nimport Login from '../pages/account/login'\nimport Register from '../pages/account/register'\nimport Account from '../pages/account'\nimport Admin from '../admin'\nimport Nomatch from '../pages/nomatch'\nimport NewList from '../pages/rankingList/newList'\nimport SoarList from '../pages/rankingList/soarList'\nimport  HotList from \"../pages/rankingList/hotList\"\nimport SingerList from \"../pages/singertList\"\nimport Cd from \"../pages/cd\"\nimport Shop from \"../pages/shop\"\nimport Problem from \"../pages/problem\"\nexport  default class IRouter extends React.Component{\n\n    render(){\n        return(\n            <HashRouter>\n                <App>\n                    <Route path=\"/admin\" render={()=>\n                    <Admin>\n                        <Switch>\n                            <Route exact={true} path=\"/admin\" component={Home}/>\n                            <Route path=\"/admin/recommend\" component={Recommend}/>\n                            <Route path=\"/admin/rankingList/newList\" component={NewList}/>\n                            <Route path=\"/admin/rankingList/soarList\" component={SoarList}/>\n                            <Route path=\"/admin/rankingList/hotList\" component={HotList}/>\n                            <Route path=\"/admin/singerList\" component={SingerList}/>\n                            <Route path=\"/admin/cd\" component={Cd}/>\n                            <Route path=\"/admin/shop\" component={Shop}/>\n                            <Route path=\"/admin/problem\" component={Problem}/>\n                            <Route path=\"/admin/login\" component={Login}/>\n                            <Route path=\"/admin/register\" component={Register}/>\n                            <Route path=\"/admin/account\" component={Account}/>\n\n                            <Route component={Nomatch}/>\n                        </Switch>\n                    </Admin>\n                    }/>\n                </App>\n            </HashRouter>\n        )\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import Admin from './admin';\nimport * as serviceWorker from './serviceWorker';\nimport Router from './utils/router'\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service wxorkers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}